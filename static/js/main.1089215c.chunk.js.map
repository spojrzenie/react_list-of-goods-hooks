{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","goods","visibleGoods","ALPHABET","sort","a","b","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","onClick","map","item","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,0DAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAoCE,IAAME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAmBMC,EA9CD,SACLA,EADK,GAGJ,IADCF,EACF,EADEA,SAAUH,EACZ,EADYA,WAERM,EAAY,YAAOD,GAkBvB,OAhBIF,IAAaP,EAASW,UACxBD,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAG1CP,IAAaP,EAASgB,QACxBN,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UAGvCb,IACFM,EAAe,YAAIA,GAAcQ,WAG/BX,IAAaP,EAASM,OACxBI,EAAY,YAAOA,IAGdA,EAwBOS,CACZlB,EAAiB,CAAEM,WAAUH,eAG/B,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEb,IAAaP,EAASW,SAClB,iBACA,0BAENW,QA/BqB,WAC3Bd,EAAYR,EAASW,WAuBjB,iCAYA,wBACEU,KAAK,SACLD,UACEb,IAAaP,EAASgB,OAClB,oBACA,6BAENM,QAvCa,WACnBd,EAAYR,EAASgB,SA+BjB,4BAYA,wBACEK,KAAK,SACLD,WACiB,IAAfhB,EACI,oBACA,6BAENkB,QA/Ca,WACnBjB,GAAeD,IAuCX,sBAYEG,IAAaP,EAASM,MAAQF,IAC9B,wBACEiB,KAAK,SACLD,UAAU,4BACVE,QApDW,WACnBd,EAAYR,EAASM,MACrBD,GAAc,IA+CR,sBAUJ,6BACGI,EAAMc,KAAI,SAAAC,GACT,OACE,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YChIrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1089215c.chunk.js","sourcesContent":["import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  let visibleGoods = [...goods];\n\n  if (sortType === SortType.ALPHABET) {\n    visibleGoods.sort((a, b) => a.localeCompare(b));\n  }\n\n  if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((a, b) => a.length - b.length);\n  }\n\n  if (isReversed) {\n    visibleGoods = [...visibleGoods].reverse();\n  }\n\n  if (sortType === SortType.NONE) {\n    visibleGoods = [...visibleGoods];\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const sortByAlphabetically = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const reverseOrder = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const resetSorting = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  const goods = getReorderedGoods(\n    goodsFromServer, { sortType, isReversed },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            sortType === SortType.ALPHABET\n              ? 'button is-info'\n              : 'button is-info is-light'\n          }\n          onClick={sortByAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            sortType === SortType.LENGTH\n              ? 'button is-success'\n              : 'button is-success is-light'\n          }\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            isReversed === true\n              ? 'button is-warning'\n              : 'button is-warning is-light'\n          }\n          onClick={reverseOrder}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetSorting}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goods.map(item => {\n          return (\n            <li key={item} data-cy=\"Good\">\n              {item}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}